class Solution {
    public boolean is(int[] nums, int l, int r) {
        int n = nums.length;
        for (int i = 0; i < n - 1; i++) {
            if (i >= l && i <= r)
                continue;
            if (i == l - 1) {
                if (r + 1 < n && nums[i] >= nums[r + 1])
                    return false;
                else
                    continue;
            }
            if (nums[i] >= nums[i + 1])
                return false;
        }
        return true;
    }

    public int incremovableSubarrayCount(int[] nums) {
        int n = nums.length;
        int ans = 0;
        for (int len = 1; len <= n; len++) {
            for (int l = 0; l <= n - len; l++) {
                int r = l + len - 1;
                if (is(nums, l, r)) {
                    System.out.println(l + " " + r); // Print the indices as per your code.
                    ans++;
                }
            }
        }
        return ans;
    }
}
